openapi: 3.0.0
info:
  title: ladok-mock
  version: '1.0'
  description: A mock Ladok API
  license:
    name: MIT
  contact:
    email: weleoka@mailfence.com
    name: Kai Weeks
servers:
  - url: 'http://localhost:8282'
    description: host-network
  - url: 'nodemocks:8080'
    description: docker-network
paths:
  /ladok:
    get:
      summary: Your GET endpoint
      tags:
        - testing
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
              examples: {}
      operationId: get-ladok
      description: A testing endpoint for Ladok Mock API. Returns all users.
  /resultat:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resultat'
              examples: {}
        '400':
          description: Bad Request
      operationId: get-ladok-resultat
      description: 'Gets a Ladok result. Resultat object with fields personnummer, kurskod, modul, datum and betyg. A search will take place and matching results returned.'
      parameters:
        - schema:
            type: string
          in: query
          name: pnr
          description: personnummer
        - schema:
            type: string
          in: query
          name: kurskod
        - schema:
            type: string
          in: query
          name: modul
        - schema:
            type: string
          in: query
          name: datum
        - schema:
            type: string
          in: query
          name: betyg
    post:
      summary: ''
      operationId: post-ladok-result
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
      description: Creates a result
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resultat'
            examples: {}
        description: A single Resultat model to be created.
      tags:
        - ladok
    parameters: []
components:
  schemas:
    user:
      description: This model is just here for demonstration purposes.
      type: object
      properties:
        name:
          type: string
          minLength: 1
        surname:
          type: string
          minLength: 1
        address:
          type: string
          minLength: 1
        phone:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        city:
          type: string
          minLength: 1
        number:
          type: string
          minLength: 1
        id:
          type: string
          minLength: 1
      required:
        - name
        - surname
        - address
        - phone
        - email
        - city
        - number
        - id
      x-tags:
        - testing
    resultat:
      title: result
      type: object
      x-examples:
        example-1:
          pnr: 19940613-1234
          kurskod: D0023E
          modul: enmodul
          datum: thisisatimestamp
          betyg: G
      properties:
        pnr:
          type: string
        kurskod:
          type: string
        modul:
          type: string
        datum:
          type: string
        betyg:
          type: string
      required:
        - pnr
        - kurskod
        - modul
      description: The main DTO for LADOK mock API
tags:
  - name: testing
  - name: ladok
